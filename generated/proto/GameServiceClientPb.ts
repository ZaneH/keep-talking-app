/**
 * @fileoverview gRPC-Web generated client stub for game
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.12.4
// source: proto/game.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_player_pb from '../proto/player_pb'; // proto import: "proto/player.proto"
import * as proto_session_pb from '../proto/session_pb'; // proto import: "proto/session.proto"


export class GameServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateGame = new grpcWeb.MethodDescriptor(
    '/game.GameService/CreateGame',
    grpcWeb.MethodType.UNARY,
    proto_player_pb.CreateGameRequest,
    proto_player_pb.CreateGameResponse,
    (request: proto_player_pb.CreateGameRequest) => {
      return request.serializeBinary();
    },
    proto_player_pb.CreateGameResponse.deserializeBinary
  );

  createGame(
    request: proto_player_pb.CreateGameRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_player_pb.CreateGameResponse>;

  createGame(
    request: proto_player_pb.CreateGameRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_player_pb.CreateGameResponse) => void): grpcWeb.ClientReadableStream<proto_player_pb.CreateGameResponse>;

  createGame(
    request: proto_player_pb.CreateGameRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_player_pb.CreateGameResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/game.GameService/CreateGame',
        request,
        metadata || {},
        this.methodDescriptorCreateGame,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/game.GameService/CreateGame',
    request,
    metadata || {},
    this.methodDescriptorCreateGame);
  }

  methodDescriptorGetBombs = new grpcWeb.MethodDescriptor(
    '/game.GameService/GetBombs',
    grpcWeb.MethodType.UNARY,
    proto_session_pb.GetBombsRequest,
    proto_session_pb.GetBombsResponse,
    (request: proto_session_pb.GetBombsRequest) => {
      return request.serializeBinary();
    },
    proto_session_pb.GetBombsResponse.deserializeBinary
  );

  getBombs(
    request: proto_session_pb.GetBombsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_session_pb.GetBombsResponse>;

  getBombs(
    request: proto_session_pb.GetBombsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_session_pb.GetBombsResponse) => void): grpcWeb.ClientReadableStream<proto_session_pb.GetBombsResponse>;

  getBombs(
    request: proto_session_pb.GetBombsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_session_pb.GetBombsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/game.GameService/GetBombs',
        request,
        metadata || {},
        this.methodDescriptorGetBombs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/game.GameService/GetBombs',
    request,
    metadata || {},
    this.methodDescriptorGetBombs);
  }

  methodDescriptorSendInput = new grpcWeb.MethodDescriptor(
    '/game.GameService/SendInput',
    grpcWeb.MethodType.UNARY,
    proto_player_pb.PlayerInput,
    proto_player_pb.PlayerInputResult,
    (request: proto_player_pb.PlayerInput) => {
      return request.serializeBinary();
    },
    proto_player_pb.PlayerInputResult.deserializeBinary
  );

  sendInput(
    request: proto_player_pb.PlayerInput,
    metadata?: grpcWeb.Metadata | null): Promise<proto_player_pb.PlayerInputResult>;

  sendInput(
    request: proto_player_pb.PlayerInput,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_player_pb.PlayerInputResult) => void): grpcWeb.ClientReadableStream<proto_player_pb.PlayerInputResult>;

  sendInput(
    request: proto_player_pb.PlayerInput,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_player_pb.PlayerInputResult) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/game.GameService/SendInput',
        request,
        metadata || {},
        this.methodDescriptorSendInput,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/game.GameService/SendInput',
    request,
    metadata || {},
    this.methodDescriptorSendInput);
  }

}

